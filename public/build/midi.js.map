{"version":3,"sources":["webpack:///webpack/bootstrap 7f8f93f66c573bcad870?32f2","webpack:///./lib/midi/midi.js","webpack:///./~/midi/build/MIDI.js","webpack:///./~/midi/inc/Base64.js","webpack:///./~/midi/inc/base64binary.js","webpack:///./~/midi/inc/jasmid/midifile.js","webpack:///./~/midi/inc/jasmid/replayer.js","webpack:///./~/midi/inc/jasmid/stream.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA,+D;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAa;;AAEb,mB;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,uCAAsC;AACtC;AACA,oC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,GAAE;AACF;;AAEA;AACA;;AAEA,cAAa;;AAEb,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG,6DAA6D;AAChE;AACA,IAAG,yBAAyB;AAC5B;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;;AAEA,oDAAmD;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,kBAAkB;AACrB,2DAA0D;AAC1D;AACA,KAAI,yBAAyB;AAC7B;AACA,KAAI,OAAO;AACX;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc,eAAe,EAAE;AAC1C;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd,yCAAwC,YAAY;AACpD;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd,yCAAwC,YAAY;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,cAAc,eAAe,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,uBAAsB;AACtB,oBAAmB;AACnB,oCAAmC;AACnC,iBAAgB;AAChB,mBAAkB,UAAU;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,kBAAkB;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;;AAEA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,8CAA6C,cAAc;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;AACA,uBAAsB,uBAAuB;AAC7C,KAAI;AACJ,IAAG;AACH,sBAAqB,uBAAuB;AAC5C;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,uBAAuB;AAC7C;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,E;AACL;AACA;AACA;AACA;;AAEA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,WAAU;AACV;AACA;AACA;AACA;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA,+BAA8B;AAC9B;AACA,iBAAgB,QAAQ;AACxB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA,qBAAoB;AACpB,qBAAoB;AACpB;AACA,gBAAe;AACf,gBAAe;AACf;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAa;;AAEb;AACA,2BAA0B;AAC1B;AACA,kB;AACA,kB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,GAAE;AACF;;AAEA;;AAEA,iCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAoB;AACpB,gBAAe;AACf,mBAAkB;AAClB,wBAAuB;AACvB,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,gCAAgC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA,IAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;;AAEA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH,kBAAiB,sBAAsB;AACvC;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClwCA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,GAAE;;AAEF,EAAC,Q;;;;;;;;;;AClED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA,kE;AACA,kE;;AAEA;AACA,4BAA2B;AAC3B,4BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,YAAW,SAAS,Q;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qB;AACA;AACA;AACA;;AAEA,iB;AACA;AACA,G;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,mBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"midi.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7f8f93f66c573bcad870\n **/","require('../../node_modules/midi/build/MIDI');\r\nrequire('../../node_modules/midi/inc/jasmid/stream');\r\nrequire('../../node_modules/midi/inc/jasmid/midifile');\r\nrequire('../../node_modules/midi/inc/jasmid/replayer');\r\nrequire('../../node_modules/midi/inc/Base64');\r\nrequire('../../node_modules/midi/inc/base64binary');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/midi/midi.js\n ** module id = 0\n ** module chunks = 1\n **/","/*\r\n\t-------------------------------------\r\n\tMIDI.audioDetect : 0.3\r\n\t-------------------------------------\r\n\thttps://github.com/mudcube/MIDI.js\r\n\t-------------------------------------\r\n\tProbably, Maybe, No... Absolutely!\r\n\t-------------------------------------\r\n\tTest to see what types of <audio> MIME types are playable by the browser.\r\n\t-------------------------------------\r\n*/\r\n\r\nif (typeof(MIDI) === \"undefined\") var MIDI = {};\r\n\r\n(function() { \"use strict\";\r\n\r\nvar supports = {};\t\r\nvar pending = 0;\r\nvar canPlayThrough = function (src) {\r\n\tpending ++;\r\n\tvar audio = new Audio();\r\n\tvar mime = src.split(\";\")[0];\r\n\taudio.id = \"audio\";\r\n\taudio.setAttribute(\"preload\", \"auto\");\r\n\taudio.setAttribute(\"audiobuffer\", true);\r\n\taudio.addEventListener(\"error\", function() {\r\n\t\tsupports[mime] = false;\r\n\t\tpending --;\r\n\t}, false);\r\n\taudio.addEventListener(\"canplaythrough\", function() {\r\n\t\tsupports[mime] = true;\r\n\t\tpending --;\r\n\t}, false);\r\n\taudio.src = \"data:\" + src;\r\n\tdocument.body.appendChild(audio);\r\n};\r\n\r\nMIDI.audioDetect = function(callback) {\r\n\t// check whether <audio> tag is supported\r\n\tif (typeof(Audio) === \"undefined\") return callback({});\r\n\t// check whether canPlayType is supported\r\n\tvar audio = new Audio();\r\n\tif (typeof(audio.canPlayType) === \"undefined\") return callback(supports);\r\n\t// see what we can learn from the browser\r\n\tvar vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"');\r\n\tvorbis = (vorbis === \"probably\" || vorbis === \"maybe\");\r\n\tvar mpeg = audio.canPlayType('audio/mpeg');\r\n\tmpeg = (mpeg === \"probably\" || mpeg === \"maybe\");\r\n\t// maybe nothing is supported\r\n\tif (!vorbis && !mpeg) {\r\n\t\tcallback(supports);\r\n\t\treturn;\r\n\t}\r\n\t// or maybe something is supported\r\n\tif (vorbis) canPlayThrough(\"audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=\");\r\n\tif (mpeg) canPlayThrough(\"audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\");\r\n\t// lets find out!\r\n\tvar time = (new Date()).getTime(); \r\n\tvar interval = window.setInterval(function() {\r\n\t\tvar now = (new Date()).getTime();\r\n\t\tvar maxExecution = now - time > 5000;\r\n\t\tif (!pending || maxExecution) {\r\n\t\t\twindow.clearInterval(interval);\r\n\t\t\tcallback(supports);\r\n\t\t}\r\n\t}, 1);\r\n};\r\n\r\n})();\r\n/*\r\n\t-----------------------------------------------------------\r\n\tMIDI.loadPlugin : 0.1.2 : 01/22/2014\r\n\t-----------------------------------------------------------\r\n\thttps://github.com/mudcube/MIDI.js\r\n\t-----------------------------------------------------------\r\n\tMIDI.loadPlugin({\r\n\t\ttargetFormat: \"mp3\", // optionally can force to use MP3 (for instance on mobile networks)\r\n\t\tinstrument: \"acoustic_grand_piano\", // or 1 (default)\r\n\t\tinstruments: [ \"acoustic_grand_piano\", \"acoustic_guitar_nylon\" ], // or multiple instruments\r\n\t\tcallback: function() { }\r\n\t});\r\n*/\r\n\r\nif (typeof (MIDI) === \"undefined\") var MIDI = {};\r\nif (typeof (MIDI.Soundfont) === \"undefined\") MIDI.Soundfont = {};\r\n\r\n(function() { \"use strict\";\r\n\r\nvar USE_JAZZMIDI = false; // Turn on to support JazzMIDI Plugin\r\n\r\nMIDI.loadPlugin = function(conf) {\r\n\tif (typeof(conf) === \"function\") conf = {\r\n\t\tcallback: conf\r\n\t};\r\n\t/// Get the instrument name.\r\n\tvar instruments = conf.instruments || conf.instrument || \"acoustic_grand_piano\";\r\n\tif (typeof(instruments) !== \"object\") instruments = [ instruments ];\r\n\t///\r\n\tfor (var n = 0; n < instruments.length; n ++) {\r\n\t\tvar instrument = instruments[n];\r\n\t\tif (typeof(instrument) === \"number\") {\r\n\t\t\tinstruments[n] = MIDI.GeneralMIDI.byId[instrument];\r\n\t\t}\r\n\t};\r\n\t///\r\n\tMIDI.soundfontUrl = conf.soundfontUrl || MIDI.soundfontUrl || \"./soundfont/\";\r\n\t/// Detect the best type of audio to use.\r\n\tMIDI.audioDetect(function(types) {\r\n\t\tvar api = \"\";\r\n\t\t// use the most appropriate plugin if not specified\r\n\t\tif (apis[conf.api]) {\r\n\t\t\tapi = conf.api;\r\n\t\t} else if (apis[window.location.hash.substr(1)]) {\r\n\t\t\tapi = window.location.hash.substr(1);\r\n\t\t} else if (USE_JAZZMIDI && navigator.requestMIDIAccess) {\r\n\t\t\tapi = \"webmidi\";\r\n\t\t} else if (window.webkitAudioContext || window.AudioContext) { // Chrome\r\n\t\t\tapi = \"webaudio\";\r\n\t\t} else if (window.Audio) { // Firefox\r\n\t\t\tapi = \"audiotag\";\r\n\t\t} else { // Internet Explorer\r\n\t\t\tapi = \"flash\";\r\n\t\t}\r\n\t\t///\r\n\t\tif (!connect[api]) return;\r\n\t\t// use audio/ogg when supported\r\n\t\tif (conf.targetFormat) {\r\n\t\t\tvar filetype = conf.targetFormat;\r\n\t\t} else { // use best quality\r\n\t\t\tvar filetype = types[\"audio/ogg\"] ? \"ogg\" : \"mp3\";\r\n\t\t}\r\n\t\t// load the specified plugin\r\n\t\tMIDI.lang = api;\r\n\t\tMIDI.supports = types;\r\n\t\tconnect[api](filetype, instruments, conf);\r\n\t});\r\n};\r\n\r\n///\r\n\r\nvar connect = {};\r\n\r\nconnect.webmidi = function(filetype, instruments, conf) {\r\n\tif (MIDI.loader) MIDI.loader.message(\"Web MIDI API...\");\r\n\tMIDI.WebMIDI.connect(conf);\r\n};\r\n\r\nconnect.flash = function(filetype, instruments, conf) {\r\n\t// fairly quick, but requires loading of individual MP3s (more http requests).\r\n\tif (MIDI.loader) MIDI.loader.message(\"Flash API...\");\r\n\tDOMLoader.script.add({\r\n\t\tsrc: conf.soundManagerUrl || \"./inc/SoundManager2/script/soundmanager2.js\",\r\n\t\tverify: \"SoundManager\",\r\n\t\tcallback: function () {\r\n\t\t\tMIDI.Flash.connect(instruments, conf);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconnect.audiotag = function(filetype, instruments, conf) {\r\n\tif (MIDI.loader) MIDI.loader.message(\"HTML5 Audio API...\");\r\n\t// works ok, kinda like a drunken tuna fish, across the board.\r\n\tvar queue = createQueue({\r\n\t\titems: instruments,\r\n\t\tgetNext: function(instrumentId) {\r\n\t\t\tconsole.log(MIDI.soundfontUrl + instrumentId + \"-\" + filetype + \".js\");\r\n\t\t\tDOMLoader.sendRequest({\r\n\t\t\t\turl: MIDI.soundfontUrl + instrumentId + \"-\" + filetype + \".js\",\r\n\t\t\t\tonprogress: getPercent,\r\n\t\t\t\tonload: function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\taddSoundfont(response.responseText);\r\n\t\t\t\t\tif (MIDI.loader) MIDI.loader.update(null, \"Downloading\", 100);\r\n\t\t\t\t\tqueue.getNext();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tonComplete: function() {\r\n\t\t\tMIDI.AudioTag.connect(conf);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconnect.webaudio = function(filetype, instruments, conf) {\r\n\tif (MIDI.loader) MIDI.loader.message(\"Web Audio API...\");\r\n\t// works awesome! safari, chrome and firefox support.\r\n\tvar queue = createQueue({\r\n\t\titems: instruments,\r\n\t\tgetNext: function(instrumentId) {\r\n\t\t\tDOMLoader.sendRequest({\r\n\t\t\t\turl: MIDI.soundfontUrl + instrumentId + \"-\" + filetype + \".js\",\r\n\t\t\t\tonprogress: getPercent,\r\n\t\t\t\tonload: function(response) {\r\n\t\t\t\t\taddSoundfont(response.responseText);\r\n\t\t\t\t\tif (MIDI.loader) MIDI.loader.update(null, \"Downloading...\", 100);\r\n\t\t\t\t\tqueue.getNext();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tonComplete: function() {\r\n\t\t\tMIDI.WebAudio.connect(conf);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/// Helpers\r\n\r\nvar apis = {\r\n\t\"webmidi\": true,\r\n\t\"webaudio\": true,\r\n\t\"audiotag\": true,\r\n\t\"flash\": true\r\n};\r\n\r\nvar addSoundfont = function(text) {\r\n\tvar script = document.createElement(\"script\");\r\n\tscript.language = \"javascript\";\r\n\tscript.type = \"text/javascript\";\r\n\tscript.text = text;\r\n\tdocument.body.appendChild(script);\r\n};\r\n\r\nvar getPercent = function(event) {\r\n\tif (!this.totalSize) {\r\n\t\tif (this.getResponseHeader(\"Content-Length-Raw\")) {\r\n\t\t\tthis.totalSize = parseInt(this.getResponseHeader(\"Content-Length-Raw\"));\r\n\t\t} else {\r\n\t\t\tthis.totalSize = event.total;\r\n\t\t}\r\n\t}\r\n\t///\r\n\tvar percent = this.totalSize ? Math.round(event.loaded / this.totalSize * 100) : \"\";\r\n\tif (MIDI.loader) MIDI.loader.update(null, \"Downloading...\", percent);\r\n};\r\n\r\nvar createQueue = function(conf) {\r\n\tvar self = {};\r\n\tself.queue = [];\r\n\tfor (var key in conf.items) {\r\n\t\tif (conf.items.hasOwnProperty(key)) {\r\n\t\t\tself.queue.push(conf.items[key]);\r\n\t\t}\r\n\t}\r\n\tself.getNext = function() {\r\n\t\tif (!self.queue.length) return conf.onComplete();\r\n\t\tconf.getNext(self.queue.shift());\r\n\t};\r\n\tsetTimeout(self.getNext, 1);\r\n\treturn self;\r\n};\r\n\r\n})();\r\n/*\r\n\t--------------------------------------------\r\n\tMIDI.Plugin : 0.3.2 : 2013/01/26\r\n\t--------------------------------------------\r\n\thttps://github.com/mudcube/MIDI.js\r\n\t--------------------------------------------\r\n\tInspired by javax.sound.midi (albeit a super simple version): \r\n\t\thttp://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\r\n\t--------------------------------------------\r\n\tTechnologies:\r\n\t\tMIDI.WebMIDI\r\n\t\tMIDI.WebAudio\r\n\t\tMIDI.Flash\r\n\t\tMIDI.AudioTag\r\n\t--------------------------------------------\r\n\tHelpers:\r\n\t\tMIDI.GeneralMIDI\r\n\t\tMIDI.channels\r\n\t\tMIDI.keyToNote\r\n\t\tMIDI.noteToKey\r\n*/\r\n\r\nif (typeof (MIDI) === \"undefined\") var MIDI = {};\r\n\r\n(function() { \"use strict\";\r\n\r\nvar setPlugin = function(root) {\r\n\tMIDI.api = root.api;\r\n\tMIDI.setVolume = root.setVolume;\r\n\tMIDI.programChange = root.programChange;\r\n\tMIDI.noteOn = root.noteOn;\r\n\tMIDI.noteOff = root.noteOff;\r\n\tMIDI.chordOn = root.chordOn;\r\n\tMIDI.chordOff = root.chordOff;\r\n\tMIDI.stopAllNotes = root.stopAllNotes;\r\n\tMIDI.getInput = root.getInput;\r\n\tMIDI.getOutputs = root.getOutputs;\r\n};\r\n\r\n/*\r\n\t--------------------------------------------\r\n\tWeb MIDI API - Native Soundbank\r\n\t--------------------------------------------\r\n\thttps://dvcs.w3.org/hg/audio/raw-file/tip/midi/specification.html\r\n\t--------------------------------------------\r\n*/\r\n\r\n(function () {\r\n\tvar plugin = null;\r\n\tvar output = null;\r\n\tvar channels = [];\r\n\tvar root = MIDI.WebMIDI = {\r\n\t\tapi: \"webmidi\"\r\n\t};\r\n\troot.setVolume = function (channel, volume) { // set channel volume\r\n\t\toutput.send([0xB0 + channel, 0x07, volume]);\r\n\t};\r\n\r\n\troot.programChange = function (channel, program) { // change channel instrument\r\n\t\toutput.send([0xC0 + channel, program]);\r\n\t};\r\n\r\n\troot.noteOn = function (channel, note, velocity, delay) {\r\n\t\toutput.send([0x90 + channel, note, velocity], delay * 1000);\r\n\t};\r\n\r\n\troot.noteOff = function (channel, note, delay) {\r\n\t\toutput.send([0x80 + channel, note, 0], delay * 1000);\r\n\t};\r\n\r\n\troot.chordOn = function (channel, chord, velocity, delay) {\r\n\t\tfor (var n = 0; n < chord.length; n ++) {\r\n\t\t\tvar note = chord[n];\r\n\t\t\toutput.send([0x90 + channel, note, velocity], delay * 1000);\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.chordOff = function (channel, chord, delay) {\r\n\t\tfor (var n = 0; n < chord.length; n ++) {\r\n\t\t\tvar note = chord[n];\r\n\t\t\toutput.send([0x80 + channel, note, 0], delay * 1000);\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.stopAllNotes = function () {\r\n\t\tfor (var channel = 0; channel < 16; channel ++) {\r\n\t\t\toutput.send([0xB0 + channel, 0x7B, 0]);\r\n\t\t}\r\n\t};\r\n\r\n\troot.getInput = function () {\r\n\t\treturn plugin.getInputs();\r\n\t};\r\n\t\r\n\troot.getOutputs = function () {\r\n\t\treturn plugin.getOutputs();\r\n\t};\r\n\r\n\troot.connect = function (conf) {\r\n\t\tsetPlugin(root);\r\n        navigator.requestMIDIAccess().then(function (access) {\r\n\t\t\tplugin = access;\r\n\t\t\toutput = plugin.outputs()[0];\r\n\t\t\tif (conf.callback) conf.callback();\r\n\t\t}, function (err) { // well at least we tried!\r\n\t\t\tif (window.AudioContext || window.webkitAudioContext) { // Chrome\r\n\t\t\t\tconf.api = \"webaudio\";\r\n\t\t\t} else if (window.Audio) { // Firefox\r\n\t\t\t\tconf.api = \"audiotag\";\r\n\t\t\t} else { // Internet Explorer\r\n\t\t\t\tconf.api = \"flash\";\r\n\t\t\t}\r\n\t\t\tMIDI.loadPlugin(conf);\r\n\t\t});\r\n\t};\r\n})();\r\n\r\n/*\r\n\t--------------------------------------------\r\n\tWeb Audio API - OGG or MPEG Soundbank\r\n\t--------------------------------------------\r\n\thttps://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html\r\n\t--------------------------------------------\r\n*/\r\n\r\nif (window.AudioContext || window.webkitAudioContext) (function () {\r\n\r\n\tvar AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\tvar root = MIDI.WebAudio = {\r\n\t\tapi: \"webaudio\"\r\n\t};\r\n\tvar ctx;\r\n\tvar sources = {};\r\n\tvar masterVolume = 127;\r\n\tvar audioBuffers = {};\r\n\tvar audioLoader = function (instrument, urlList, index, bufferList, callback) {\r\n\t\tvar synth = MIDI.GeneralMIDI.byName[instrument];\r\n\t\tvar instrumentId = synth.number;\r\n\t\tvar url = urlList[index];\r\n\t\tif (!MIDI.Soundfont[instrument][url]) { // missing soundfont\r\n\t\t\treturn callback(instrument);\r\n\t\t}\r\n\t\tvar base64 = MIDI.Soundfont[instrument][url].split(\",\")[1];\r\n\t\tvar buffer = Base64Binary.decodeArrayBuffer(base64);\r\n\t\tctx.decodeAudioData(buffer, function (buffer) {\r\n\t\t\tvar msg = url;\r\n\t\t\twhile (msg.length < 3) msg += \"&nbsp;\";\r\n\t\t\tif (typeof (MIDI.loader) !== \"undefined\") {\r\n\t\t\t\tMIDI.loader.update(null, synth.instrument + \"<br>Processing: \" + (index / 87 * 100 >> 0) + \"%<br>\" + msg);\r\n\t\t\t}\r\n\t\t\tbuffer.id = url;\r\n\t\t\tbufferList[index] = buffer;\r\n\t\t\t//\r\n\t\t\tif (bufferList.length === urlList.length) {\r\n\t\t\t\twhile (bufferList.length) {\r\n\t\t\t\t\tbuffer = bufferList.pop();\r\n\t\t\t\t\tif (!buffer) continue;\r\n\t\t\t\t\tvar nodeId = MIDI.keyToNote[buffer.id];\r\n\t\t\t\t\taudioBuffers[instrumentId + \"\" + nodeId] = buffer;\r\n\t\t\t\t}\r\n\t\t\t\tcallback(instrument);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\troot.setVolume = function (channel, volume) {\r\n\t\tmasterVolume = volume;\r\n\t};\r\n\r\n\troot.programChange = function (channel, program) {\r\n\t\tMIDI.channels[channel].instrument = program;\r\n\t};\r\n\r\n\troot.noteOn = function (channel, note, velocity, delay) {\r\n\t\t/// check whether the note exists\r\n\t\tif (!MIDI.channels[channel]) return;\r\n\t\tvar instrument = MIDI.channels[channel].instrument;\r\n\t\tif (!audioBuffers[instrument + \"\" + note]) return;\r\n\t\t/// convert relative delay to absolute delay\r\n\t\tif (delay < ctx.currentTime) delay += ctx.currentTime;\r\n\t\t/// crate audio buffer\r\n\t\tvar source = ctx.createBufferSource();\r\n\t\tsources[channel + \"\" + note] = source;\r\n\t\tsource.buffer = audioBuffers[instrument + \"\" + note];\r\n\t\tsource.connect(ctx.destination);\r\n\t\t///\r\n\t\tif (ctx.createGain) { // firefox\r\n\t\t\tsource.gainNode = ctx.createGain();\r\n\t\t} else { // chrome\r\n\t\t\tsource.gainNode = ctx.createGainNode();\r\n\t\t}\r\n\t\tvar value = (velocity / 127) * (masterVolume / 127) * 2 - 1;\r\n\t\tsource.gainNode.connect(ctx.destination);\r\n\t\tsource.gainNode.gain.value = Math.max(-1, value);\r\n\t\tsource.connect(source.gainNode);\r\n\t\tif (source.noteOn) { // old api\r\n\t\t\tsource.noteOn(delay || 0);\r\n\t\t} else { // new api\r\n\t\t\tsource.start(delay || 0);\r\n\t\t}\r\n\t\treturn source;\r\n\t};\r\n\r\n\troot.noteOff = function (channel, note, delay) {\r\n\t\tdelay = delay || 0;\r\n\t\tif (delay < ctx.currentTime) delay += ctx.currentTime;\r\n\t\tvar source = sources[channel + \"\" + note];\r\n\t\tif (!source) return;\r\n\t\tif (source.gainNode) {\r\n\t\t\t// @Miranet: \"the values of 0.2 and 0.3 could ofcourse be used as \r\n\t\t\t// a 'release' parameter for ADSR like time settings.\"\r\n\t\t\t// add { \"metadata\": { release: 0.3 } } to soundfont files\r\n\t\t\tvar gain = source.gainNode.gain;\r\n\t\t\tgain.linearRampToValueAtTime(gain.value, delay);\r\n\t\t\tgain.linearRampToValueAtTime(-1, delay + 0.2);\r\n\t\t}\r\n\t\tif (source.noteOff) { // old api\r\n\t\t\tsource.noteOff(delay + 0.3);\r\n\t\t} else {\r\n\t\t\tsource.stop(delay + 0.3);\r\n\t\t}\r\n\t\t///\r\n\t\tdelete sources[channel + \"\" + note];\r\n\t};\r\n\r\n\troot.chordOn = function (channel, chord, velocity, delay) {\r\n\t\tvar ret = {}, note;\r\n\t\tfor (var n = 0, length = chord.length; n < length; n++) {\r\n\t\t\tret[note = chord[n]] = root.noteOn(channel, note, velocity, delay);\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n\r\n\troot.chordOff = function (channel, chord, delay) {\r\n\t\tvar ret = {}, note;\r\n\t\tfor (var n = 0, length = chord.length; n < length; n++) {\r\n\t\t\tret[note = chord[n]] = root.noteOff(channel, note, delay);\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n\r\n    root.stopAllNotes = function () {\r\n        for (var source in sources) {\r\n            var delay = 0;\r\n            if (delay < ctx.currentTime) delay += ctx.currentTime;\r\n            // @Miranet: \"the values of 0.2 and 0.3 could ofcourse be used as\r\n            // a 'release' parameter for ADSR like time settings.\"\r\n            // add { \"metadata\": { release: 0.3 } } to soundfont files\r\n            sources[source].gain.linearRampToValueAtTime(1, delay);\r\n            sources[source].gain.linearRampToValueAtTime(0, delay + 0.2);\r\n            sources[source].noteOff(delay + 0.3);\r\n            delete sources[source];\r\n        }\r\n    };\r\n\r\n\troot.connect = function (conf) {\r\n\t\tsetPlugin(root);\r\n\t\t//\r\n\t\tMIDI.Player.ctx = ctx = new AudioContext();\r\n\t\t///\r\n\t\tvar urlList = [];\r\n\t\tvar keyToNote = MIDI.keyToNote;\r\n\t\tfor (var key in keyToNote) urlList.push(key);\r\n\t\tvar bufferList = [];\r\n\t\tvar pending = {};\r\n\t\tvar oncomplete = function(instrument) {\r\n\t\t\tdelete pending[instrument];\r\n\t\t\tfor (var key in pending) break;\r\n\t\t\tif (!key) conf.callback();\r\n\t\t};\r\n\t\tfor (var instrument in MIDI.Soundfont) {\r\n\t\t\tpending[instrument] = true;\r\n\t\t\tfor (var i = 0; i < urlList.length; i++) {\r\n\t\t\t\taudioLoader(instrument, urlList, i, bufferList, oncomplete);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/*\r\n\t--------------------------------------------\r\n\tAudioTag <audio> - OGG or MPEG Soundbank\r\n\t--------------------------------------------\r\n\thttp://dev.w3.org/html5/spec/Overview.html#the-audio-element\r\n\t--------------------------------------------\r\n*/\r\n\r\nif (window.Audio) (function () {\r\n\r\n\tvar root = MIDI.AudioTag = {\r\n\t\tapi: \"audiotag\"\r\n\t};\r\n\tvar note2id = {};\r\n\tvar volume = 127; // floating point \r\n\tvar channel_nid = -1; // current channel\r\n\tvar channels = []; // the audio channels\r\n\tvar channelInstrumentNoteIds = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\r\n\tvar notes = {}; // the piano keys\r\n\tfor (var nid = 0; nid < 12; nid++) {\r\n\t\tchannels[nid] = new Audio();\r\n\t}\r\n\r\n\tvar playChannel = function (channel, note) {\r\n\t\tif (!MIDI.channels[channel]) return;\r\n\t\tvar instrument = MIDI.channels[channel].instrument;\r\n\t\tvar instrumentId = MIDI.GeneralMIDI.byId[instrument].id;\r\n\t\tvar note = notes[note];\r\n\t\tif (!note) return;\r\n\t\tvar instrumentNoteId = instrumentId + \"\" + note.id;\r\n\t\tvar nid = (channel_nid + 1) % channels.length;\r\n\t\tvar audio = channels[nid];\r\n\t\tchannelInstrumentNoteIds[ nid ] = instrumentNoteId;\r\n\t\taudio.src = MIDI.Soundfont[instrumentId][note.id];\r\n\t\taudio.volume = volume / 127;\r\n\t\taudio.play();\r\n\t\tchannel_nid = nid;\r\n\t};\r\n\r\n\tvar stopChannel = function (channel, note) {\r\n\t\tif (!MIDI.channels[channel]) return;\r\n\t\tvar instrument = MIDI.channels[channel].instrument;\r\n\t\tvar instrumentId = MIDI.GeneralMIDI.byId[instrument].id;\r\n\t\tvar note = notes[note];\r\n\t\tif (!note) return;\r\n\t\tvar instrumentNoteId = instrumentId + \"\" + note.id;\r\n\r\n\t\tfor(var i=0;i<channels.length;i++){\r\n\t\t\tvar nid = (i + channel_nid + 1) % channels.length;\r\n\t\t\tvar cId = channelInstrumentNoteIds[nid];\r\n\r\n\t\t\tif(cId && cId == instrumentNoteId){\r\n\t\t\t\tchannels[nid].pause();\r\n\t\t\t\tchannelInstrumentNoteIds[nid] = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\troot.programChange = function (channel, program) {\r\n\t\tMIDI.channels[channel].instrument = program;\r\n\t};\r\n\r\n\troot.setVolume = function (channel, n) {\r\n\t\tvolume = n; //- should be channel specific volume\r\n\t};\r\n\r\n\troot.noteOn = function (channel, note, velocity, delay) {\r\n\t\tvar id = note2id[note];\r\n\t\tif (!notes[id]) return;\r\n\t\tif (delay) {\r\n\t\t\treturn window.setTimeout(function () {\r\n\t\t\t\tplayChannel(channel, id);\r\n\t\t\t}, delay * 1000);\r\n\t\t} else {\r\n\t\t\tplayChannel(channel, id);\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.noteOff = function (channel, note, delay) {\r\n\t\tvar id = note2id[note];\r\n\t\tif (!notes[id]) return;\r\n\t\tif (delay) {\r\n\t\t\treturn setTimeout(function() {\r\n\t\t\t\tstopChannel(channel, id);\r\n\t\t\t}, delay * 1000)\r\n\t\t} else {\r\n\t\t\tstopChannel(channel, id);\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.chordOn = function (channel, chord, velocity, delay) {\r\n\t\tfor (var idx = 0; idx < chord.length; idx ++) {\r\n\t\t\tvar n = chord[idx];\r\n\t\t\tvar id = note2id[n];\r\n\t\t\tif (!notes[id]) continue;\r\n\t\t\tif (delay) {\r\n\t\t\t\treturn window.setTimeout(function () {\r\n\t\t\t\t\tplayChannel(channel, id);\r\n\t\t\t\t}, delay * 1000);\r\n\t\t\t} else {\r\n\t\t\t\tplayChannel(channel, id);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.chordOff = function (channel, chord, delay) {\r\n\t\tfor (var idx = 0; idx < chord.length; idx ++) {\r\n\t\t\tvar n = chord[idx];\r\n\t\t\tvar id = note2id[n];\r\n\t\t\tif (!notes[id]) continue;\r\n\t\t\tif (delay) {\r\n\t\t\t\treturn window.setTimeout(function () {\r\n\t\t\t\t\tstopChannel(channel, id);\r\n\t\t\t\t}, delay * 1000);\r\n\t\t\t} else {\r\n\t\t\t\tstopChannel(channel, id);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.stopAllNotes = function () {\r\n\t\tfor (var nid = 0, length = channels.length; nid < length; nid++) {\r\n\t\t\tchannels[nid].pause();\r\n\t\t}\r\n\t};\r\n\t\r\n\troot.connect = function (conf) {\r\n\t\tfor (var key in MIDI.keyToNote) {\r\n\t\t\tnote2id[MIDI.keyToNote[key]] = key;\r\n\t\t\tnotes[key] = {\r\n\t\t\t\tid: key\r\n\t\t\t};\r\n\t\t}\r\n\t\tsetPlugin(root);\r\n\t\t///\r\n\t\tif (conf.callback) conf.callback();\r\n\t};\r\n})();\r\n\r\n/*\r\n\t--------------------------------------------\r\n\tFlash - MP3 Soundbank\r\n\t--------------------------------------------\r\n\thttp://www.schillmania.com/projects/soundmanager2/\r\n\t--------------------------------------------\r\n*/\r\n\t\r\n(function () {\r\n\r\n\tvar root = MIDI.Flash = {\r\n\t\tapi: \"flash\"\r\n\t};\r\n\tvar noteReverse = {};\r\n\tvar notes = {};\r\n\r\n\troot.programChange = function (channel, program) {\r\n\t\tMIDI.channels[channel].instrument = program;\r\n\t};\r\n\r\n\troot.setVolume = function (channel, note) {\r\n\r\n\t};\r\n\r\n\troot.noteOn = function (channel, note, velocity, delay) {\r\n\t\tif (!MIDI.channels[channel]) return;\r\n\t\tvar instrument = MIDI.channels[channel].instrument;\r\n\t\tvar id = MIDI.GeneralMIDI.byId[instrument].number;\r\n\t\tnote = id + \"\" + noteReverse[note];\r\n\t\tif (!notes[note]) return;\r\n\t\tif (delay) {\r\n\t\t\treturn window.setTimeout(function() { \r\n\t\t\t\tnotes[note].play({ volume: velocity * 2 });\r\n\t\t\t}, delay * 1000);\r\n\t\t} else {\r\n\t\t\tnotes[note].play({ volume: velocity * 2 });\r\n\t\t}\r\n\t};\r\n\r\n\troot.noteOff = function (channel, note, delay) {\r\n\r\n\t};\r\n\r\n\troot.chordOn = function (channel, chord, velocity, delay) {\r\n\t\tif (!MIDI.channels[channel]) return;\r\n\t\tvar instrument = MIDI.channels[channel].instrument;\r\n\t\tvar id = MIDI.GeneralMIDI.byId[instrument].number;\r\n\t\tfor (var key in chord) {\r\n\t\t\tvar n = chord[key];\r\n\t\t\tvar note = id + \"\" + noteReverse[n];\r\n\t\t\tif (notes[note]) {\r\n\t\t\t\tnotes[note].play({ volume: velocity * 2 });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\troot.chordOff = function (channel, chord, delay) {\r\n\r\n\t};\r\n\r\n\troot.stopAllNotes = function () {\r\n\r\n\t};\r\n\r\n\troot.connect = function (instruments, conf) {\r\n\t\tsoundManager.flashVersion = 9;\r\n\t\tsoundManager.useHTML5Audio = true;\r\n\t\tsoundManager.url = conf.soundManagerSwfUrl || '../inc/SoundManager2/swf/';\r\n\t\tsoundManager.useHighPerformance = true;\r\n\t\tsoundManager.wmode = 'transparent';\r\n\t\tsoundManager.flashPollingInterval = 1;\r\n\t\tsoundManager.debugMode = false;\r\n\t\tsoundManager.onload = function () {\r\n\t\t\tvar createBuffer = function(instrument, id, onload) {\r\n\t\t\t\tvar synth = MIDI.GeneralMIDI.byName[instrument];\r\n\t\t\t\tvar instrumentId = synth.number;\r\n\t\t\t\tnotes[instrumentId+\"\"+id] = soundManager.createSound({\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\turl: MIDI.soundfontUrl + instrument + \"-mp3/\" + id + \".mp3\",\r\n\t\t\t\t\tmultiShot: true,\r\n\t\t\t\t\tautoLoad: true,\r\n\t\t\t\t\tonload: onload\r\n\t\t\t\t});\t\t\t\r\n\t\t\t};\r\n\t\t\tvar loaded = [];\r\n\t\t\tvar samplesPerInstrument = 88;\r\n\t\t\tvar samplesToLoad = instruments.length * samplesPerInstrument;\r\n\t\t\t\t\r\n\t\t\tfor (var i = 0; i < instruments.length; i++) {\r\n\t\t\t\tvar instrument = instruments[i];\r\n\t\t\t\tvar onload = function () {\r\n\t\t\t\t\tloaded.push(this.sID);\r\n\t\t\t\t\tif (typeof (MIDI.loader) === \"undefined\") return;\r\n\t\t\t\t\tMIDI.loader.update(null, \"Processing: \" + this.sID);\r\n\t\t\t\t};\r\n\t\t\t\tfor (var j = 0; j < samplesPerInstrument; j++) {\r\n\t\t\t\t\tvar id = noteReverse[j + 21];\r\n\t\t\t\t\tcreateBuffer(instrument, id, onload);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t///\r\n\t\t\tsetPlugin(root);\r\n\t\t\t//\r\n\t\t\tvar interval = window.setInterval(function () {\r\n\t\t\t\tif (loaded.length < samplesToLoad) return;\r\n\t\t\t\twindow.clearInterval(interval);\r\n\t\t\t\tif (conf.callback) conf.callback();\r\n\t\t\t}, 25);\r\n\t\t};\r\n\t\tsoundManager.onerror = function () {\r\n\r\n\t\t};\r\n\t\tfor (var key in MIDI.keyToNote) {\r\n\t\t\tnoteReverse[MIDI.keyToNote[key]] = key;\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/*\r\n\thelper functions\r\n*/\r\n\r\n// instrument-tracker\r\nMIDI.GeneralMIDI = (function (arr) {\r\n\tvar clean = function(v) {\r\n\t\treturn v.replace(/[^a-z0-9 ]/gi, \"\").replace(/[ ]/g, \"_\").toLowerCase();\r\n\t};\r\n\tvar ret = {\r\n\t\tbyName: {},\r\n\t\tbyId: {},\r\n\t\tbyCategory: {}\r\n\t};\r\n\tfor (var key in arr) {\r\n\t\tvar list = arr[key];\r\n\t\tfor (var n = 0, length = list.length; n < length; n++) {\r\n\t\t\tvar instrument = list[n];\r\n\t\t\tif (!instrument) continue;\r\n\t\t\tvar num = parseInt(instrument.substr(0, instrument.indexOf(\" \")), 10);\r\n\t\t\tinstrument = instrument.replace(num + \" \", \"\");\r\n\t\t\tret.byId[--num] = \r\n\t\t\tret.byName[clean(instrument)] = \r\n\t\t\tret.byCategory[clean(key)] = {\r\n\t\t\t\tid: clean(instrument),\r\n\t\t\t\tinstrument: instrument,\r\n\t\t\t\tnumber: num,\r\n\t\t\t\tcategory: key\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n})({\r\n\t'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\r\n\t'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\r\n\t'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\r\n\t'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\r\n\t'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\r\n\t'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\r\n\t'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\r\n\t'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\r\n\t'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\r\n\t'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\r\n\t'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\r\n\t'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\r\n\t'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\r\n\t'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\r\n\t'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],\r\n\t'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\r\n});\r\n\r\n// channel-tracker\r\nMIDI.channels = (function () { // 0 - 15 channels\r\n\tvar channels = {};\r\n\tfor (var n = 0; n < 16; n++) {\r\n\t\tchannels[n] = { // default values\r\n\t\t\tinstrument: 0,\r\n\t\t\t// Acoustic Grand Piano\r\n\t\t\tmute: false,\r\n\t\t\tmono: false,\r\n\t\t\tomni: false,\r\n\t\t\tsolo: false\r\n\t\t};\r\n\t}\r\n\treturn channels;\r\n})();\r\n\r\n//\r\nMIDI.pianoKeyOffset = 21;\r\n\r\n// note conversions\r\nMIDI.keyToNote = {}; // C8  == 108\r\nMIDI.noteToKey = {}; // 108 ==  C8\r\n(function () {\r\n\tvar A0 = 0x15; // first note\r\n\tvar C8 = 0x6C; // last note\r\n\tvar number2key = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\r\n\tfor (var n = A0; n <= C8; n++) {\r\n\t\tvar octave = (n - 12) / 12 >> 0;\r\n\t\tvar name = number2key[n % 12] + octave;\r\n\t\tMIDI.keyToNote[name] = n;\r\n\t\tMIDI.noteToKey[n] = name;\r\n\t}\r\n})();\r\n\r\n})();\r\n/*\r\n\t-------------------------------------\r\n\tMIDI.Player : 0.3\r\n\t-------------------------------------\r\n\thttps://github.com/mudcube/MIDI.js\r\n\t-------------------------------------\r\n\t#jasmid\r\n\t-------------------------------------\r\n*/\r\n\r\nif (typeof (MIDI) === \"undefined\") var MIDI = {};\r\nif (typeof (MIDI.Player) === \"undefined\") MIDI.Player = {};\r\n\r\n(function() { \"use strict\";\r\n\r\nvar root = MIDI.Player;\r\nroot.callback = undefined; // your custom callback goes here!\r\nroot.currentTime = 0;\r\nroot.endTime = 0; \r\nroot.restart = 0; \r\nroot.playing = false;\r\nroot.timeWarp = 1;\r\n\r\n//\r\nroot.start =\r\nroot.resume = function () {\r\n\tif (root.currentTime < -1) root.currentTime = -1;\r\n\tstartAudio(root.currentTime);\r\n};\r\n\r\nroot.pause = function () {\r\n\tvar tmp = root.restart;\r\n\tstopAudio();\r\n\troot.restart = tmp;\r\n};\r\n\r\nroot.stop = function () {\r\n\tstopAudio();\r\n\troot.restart = 0;\r\n\troot.currentTime = 0;\r\n};\r\n\r\nroot.addListener = function(callback) {\r\n\tonMidiEvent = callback;\r\n};\r\n\r\nroot.removeListener = function() {\r\n\tonMidiEvent = undefined;\r\n};\r\n\r\nroot.clearAnimation = function() {\r\n\tif (root.interval)  {\r\n\t\twindow.clearInterval(root.interval);\r\n\t}\r\n};\r\n\r\nroot.setAnimation = function(config) {\r\n\tvar callback = (typeof(config) === \"function\") ? config : config.callback;\r\n\tvar interval = config.interval || 30;\r\n\tvar currentTime = 0;\r\n\tvar tOurTime = 0;\r\n\tvar tTheirTime = 0;\r\n\t//\r\n\troot.clearAnimation();\r\n\troot.interval = window.setInterval(function () {\r\n\t\tif (root.endTime === 0) return;\r\n\t\tif (root.playing) {\r\n\t\t\tcurrentTime = (tTheirTime === root.currentTime) ? tOurTime - (new Date).getTime() : 0;\r\n\t\t\tif (root.currentTime === 0) {\r\n\t\t\t\tcurrentTime = 0;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentTime = root.currentTime - currentTime;\r\n\t\t\t}\r\n\t\t\tif (tTheirTime !== root.currentTime) {\r\n\t\t\t\ttOurTime = (new Date).getTime();\r\n\t\t\t\ttTheirTime = root.currentTime;\r\n\t\t\t}\r\n\t\t} else { // paused\r\n\t\t\tcurrentTime = root.currentTime;\r\n\t\t}\r\n\t\tvar endTime = root.endTime;\r\n\t\tvar percent = currentTime / endTime;\r\n\t\tvar total = currentTime / 1000;\r\n\t\tvar minutes = total / 60;\r\n\t\tvar seconds = total - (minutes * 60);\r\n\t\tvar t1 = minutes * 60 + seconds;\r\n\t\tvar t2 = (endTime / 1000);\r\n\t\tif (t2 - t1 < -1) return;\r\n\t\tcallback({\r\n\t\t\tnow: t1,\r\n\t\t\tend: t2,\r\n\t\t\tevents: noteRegistrar\r\n\t\t});\r\n\t}, interval);\r\n};\r\n\r\n// helpers\r\n\r\nroot.loadMidiFile = function() { // reads midi into javascript array of events\r\n\troot.replayer = new Replayer(MidiFile(root.currentData), root.timeWarp);\r\n\troot.data = root.replayer.getData();\r\n\troot.endTime = getLength();\r\n};\r\n\r\nroot.loadFile = function (file, callback) {\r\n\troot.stop();\r\n\tif (file.indexOf(\"base64,\") !== -1) {\r\n\t\tvar data = window.atob(file.split(\",\")[1]);\r\n\t\troot.currentData = data;\r\n\t\troot.loadMidiFile();\r\n\t\tif (callback) callback(data);\r\n\t\treturn;\r\n\t}\r\n\t///\r\n\tvar fetch = new XMLHttpRequest();\r\n\tfetch.open('GET', file);\r\n\tfetch.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n\tfetch.onreadystatechange = function () {\r\n\t\tif (this.readyState === 4 && this.status === 200) {\r\n\t\t\tvar t = this.responseText || \"\";\r\n\t\t\tvar ff = [];\r\n\t\t\tvar mx = t.length;\r\n\t\t\tvar scc = String.fromCharCode;\r\n\t\t\tfor (var z = 0; z < mx; z++) {\r\n\t\t\t\tff[z] = scc(t.charCodeAt(z) & 255);\r\n\t\t\t}\r\n\t\t\tvar data = ff.join(\"\");\r\n\t\t\troot.currentData = data;\r\n\t\t\troot.loadMidiFile();\r\n\t\t\tif (callback) callback(data);\r\n\t\t}\r\n\t};\r\n\tfetch.send();\r\n};\r\n\r\n// Playing the audio\r\n\r\nvar eventQueue = []; // hold events to be triggered\r\nvar queuedTime; // \r\nvar startTime = 0; // to measure time elapse\r\nvar noteRegistrar = {}; // get event for requested note\r\nvar onMidiEvent = undefined; // listener callback\r\nvar scheduleTracking = function (channel, note, currentTime, offset, message, velocity) {\r\n\tvar interval = window.setTimeout(function () {\r\n\t\tvar data = {\r\n\t\t\tchannel: channel,\r\n\t\t\tnote: note,\r\n\t\t\tnow: currentTime,\r\n\t\t\tend: root.endTime,\r\n\t\t\tmessage: message,\r\n\t\t\tvelocity: velocity\r\n\t\t};\r\n\t\t//\r\n\t\tif (message === 128) {\r\n\t\t\tdelete noteRegistrar[note];\r\n\t\t} else {\r\n\t\t\tnoteRegistrar[note] = data;\r\n\t\t}\r\n\t\tif (onMidiEvent) {\r\n\t\t\tonMidiEvent(data);\r\n\t\t}\r\n\t\troot.currentTime = currentTime;\r\n\t\tif (root.currentTime === queuedTime && queuedTime < root.endTime) { // grab next sequence\r\n\t\t\tstartAudio(queuedTime, true);\r\n\t\t}\r\n\t}, currentTime - offset);\r\n\treturn interval;\r\n};\r\n\r\nvar getContext = function() {\r\n\tif (MIDI.lang === 'WebAudioAPI') {\r\n\t\treturn MIDI.Player.ctx;\r\n\t} else if (!root.ctx) {\r\n\t\troot.ctx = { currentTime: 0 };\r\n\t}\r\n\treturn root.ctx;\r\n};\r\n\r\nvar getLength = function() {\r\n\tvar data =  root.data;\r\n\tvar length = data.length;\r\n\tvar totalTime = 0.5;\r\n\tfor (var n = 0; n < length; n++) {\r\n\t\ttotalTime += data[n][1];\r\n\t}\r\n\treturn totalTime;\r\n};\r\n\r\nvar startAudio = function (currentTime, fromCache) {\r\n\tif (!root.replayer) return;\r\n\tif (!fromCache) {\r\n\t\tif (typeof (currentTime) === \"undefined\") currentTime = root.restart;\r\n\t\tif (root.playing) stopAudio();\r\n\t\troot.playing = true;\r\n\t\troot.data = root.replayer.getData();\r\n\t\troot.endTime = getLength();\r\n\t}\r\n\tvar note;\r\n\tvar offset = 0;\r\n\tvar messages = 0;\r\n\tvar data = root.data;\t\r\n\tvar ctx = getContext();\r\n\tvar length = data.length;\r\n\t//\r\n\tqueuedTime = 0.5;\r\n\tstartTime = ctx.currentTime;\r\n\t//\r\n\tfor (var n = 0; n < length && messages < 20000; n++) {\r\n\t\tqueuedTime += data[n][1];\r\n\t\tif (queuedTime < currentTime) {\r\n\t\t\toffset = queuedTime;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcurrentTime = queuedTime - offset;\r\n\t\tvar event = data[n][0].event;\r\n\t\tif (event.type !== \"channel\") continue;\r\n\t\tvar channel = event.channel;\r\n\t\tswitch (event.subtype) {\r\n\t\t\tcase 'noteOn':\r\n\t\t\t\tif (MIDI.channels[channel].mute) break;\r\n\t\t\t\tnote = event.noteNumber - (root.MIDIOffset || 0);\r\n\t\t\t\teventQueue.push({\r\n\t\t\t\t\tevent: event,\r\n\t\t\t\t\tsource: MIDI.noteOn(channel, event.noteNumber, event.velocity, currentTime / 1000 + ctx.currentTime),\r\n\t\t\t\t\tinterval: scheduleTracking(channel, note, queuedTime, offset, 144, event.velocity)\r\n\t\t\t\t});\r\n\t\t\t\tmessages ++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'noteOff':\r\n\t\t\t\tif (MIDI.channels[channel].mute) break;\r\n\t\t\t\tnote = event.noteNumber - (root.MIDIOffset || 0);\r\n\t\t\t\teventQueue.push({\r\n\t\t\t\t\tevent: event,\r\n\t\t\t\t\tsource: MIDI.noteOff(channel, event.noteNumber, currentTime / 1000 + ctx.currentTime),\r\n\t\t\t\t\tinterval: scheduleTracking(channel, note, queuedTime, offset, 128)\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar stopAudio = function () {\r\n\tvar ctx = getContext();\r\n\troot.playing = false;\r\n\troot.restart += (ctx.currentTime - startTime) * 1000;\r\n\t// stop the audio, and intervals\r\n\twhile (eventQueue.length) {\r\n\t\tvar o = eventQueue.pop();\r\n\t\twindow.clearInterval(o.interval);\r\n\t\tif (!o.source) continue; // is not webaudio\r\n\t\tif (typeof(o.source) === \"number\") {\r\n\t\t\twindow.clearTimeout(o.source);\r\n\t\t} else { // webaudio\r\n\t\t\to.source.disconnect(0);\r\n\t\t}\r\n\t}\r\n\t// run callback to cancel any notes still playing\r\n\tfor (var key in noteRegistrar) {\r\n\t\tvar o = noteRegistrar[key]\r\n\t\tif (noteRegistrar[key].message === 144 && onMidiEvent) {\r\n\t\t\tonMidiEvent({\r\n\t\t\t\tchannel: o.channel,\r\n\t\t\t\tnote: o.note,\r\n\t\t\t\tnow: o.now,\r\n\t\t\t\tend: o.end,\r\n\t\t\t\tmessage: 128,\r\n\t\t\t\tvelocity: o.velocity\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t// reset noteRegistrar\r\n\tnoteRegistrar = {};\r\n};\r\n\r\n})();\r\n\r\n/*\r\n\r\n\tDOMLoader.XMLHttp\r\n\t--------------------------\r\n\tDOMLoader.sendRequest({\r\n\t\turl: \"./dir/something.extension\",\r\n\t\tdata: \"test!\",\r\n\t\tonerror: function(event) {\r\n\t\t\tconsole.log(event);\r\n\t\t},\r\n\t\tonload: function(response) {\r\n\t\t\tconsole.log(response.responseText);\r\n\t\t}, \r\n\t\tonprogress: function (event) {\r\n\t\t\tvar percent = event.loaded / event.total * 100 >> 0;\r\n\t\t\tloader.message(\"loading: \" + percent + \"%\");\r\n\t\t}\r\n\t});\r\n\t\r\n*/\r\n\r\nif (typeof(DOMLoader) === \"undefined\") var DOMLoader = {};\r\n\r\n// Add XMLHttpRequest when not available\r\n\r\nif (typeof (window.XMLHttpRequest) === \"undefined\") {\r\n\tvar XMLHttpRequest;\r\n\t(function () { // find equivalent for IE\r\n\t\tvar factories = [\r\n\t\tfunction () {\r\n\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP\")\r\n\t\t}, function () {\r\n\t\t\treturn new ActiveXObject(\"Msxml3.XMLHTTP\")\r\n\t\t}, function () {\r\n\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP\")\r\n\t\t}];\r\n\t\tfor (var i = 0; i < factories.length; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tfactories[i]();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tXMLHttpRequest = factories[i];\r\n\t})();\r\n}\r\n\r\nif (typeof ((new window.XMLHttpRequest()).responseText) === \"undefined\") {\r\n\t// http://stackoverflow.com/questions/1919972/how-do-i-access-xhr-responsebody-for-binary-data-from-javascript-in-ie\r\n    var IEBinaryToArray_ByteStr_Script =\r\n    \"<!-- IEBinaryToArray_ByteStr -->\\r\\n\"+\r\n    \"<script type='text/vbscript'>\\r\\n\"+\r\n    \"Function IEBinaryToArray_ByteStr(Binary)\\r\\n\"+\r\n    \"   IEBinaryToArray_ByteStr = CStr(Binary)\\r\\n\"+\r\n    \"End Function\\r\\n\"+\r\n    \"Function IEBinaryToArray_ByteStr_Last(Binary)\\r\\n\"+\r\n    \"   Dim lastIndex\\r\\n\"+\r\n    \"   lastIndex = LenB(Binary)\\r\\n\"+\r\n    \"   if lastIndex mod 2 Then\\r\\n\"+\r\n    \"       IEBinaryToArray_ByteStr_Last = Chr( AscB( MidB( Binary, lastIndex, 1 ) ) )\\r\\n\"+\r\n    \"   Else\\r\\n\"+\r\n    \"       IEBinaryToArray_ByteStr_Last = \"+'\"\"'+\"\\r\\n\"+\r\n    \"   End If\\r\\n\"+\r\n    \"End Function\\r\\n\"+\r\n    \"</script>\\r\\n\";\r\n\r\n\t// inject VBScript\r\n\tdocument.write(IEBinaryToArray_ByteStr_Script);\r\n\r\n\tDOMLoader.sendRequest = function(conf) {\r\n\t\t// helper to convert from responseBody to a \"responseText\" like thing\r\n\t\tfunction getResponseText(binary) {\r\n\t\t\tvar byteMapping = {};\r\n\t\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\t\tfor (var j = 0; j < 256; j++) {\r\n\t\t\t\t\tbyteMapping[String.fromCharCode(i + j * 256)] = String.fromCharCode(i) + String.fromCharCode(j);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// call into VBScript utility fns\r\n\t\t\tvar rawBytes = IEBinaryToArray_ByteStr(binary);\r\n\t\t\tvar lastChr = IEBinaryToArray_ByteStr_Last(binary);\r\n\t\t\treturn rawBytes.replace(/[\\s\\S]/g, function (match) {\r\n\t\t\t\treturn byteMapping[match];\r\n\t\t\t}) + lastChr;\r\n\t\t};\r\n\t\t//\r\n\t\tvar req = window.XMLHttpRequest();\r\n\t\treq.open(\"GET\", conf.url, true);\r\n\t\tif (conf.responseType) req.responseType = conf.responseType;\r\n\t\tif (conf.onerror) req.onerror = conf.onerror;\r\n\t\tif (conf.onprogress) req.onprogress = conf.onprogress;\r\n\t\treq.onreadystatechange = function (event) {\r\n\t\t\tif (req.readyState === 4) {\r\n\t\t\t\tif (req.status === 200) {\r\n\t\t\t\t\treq.responseText = getResponseText(req.responseBody);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treq = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (conf.onload) conf.onload(req);\r\n\t\t\t}\r\n\t\t};\r\n\t\treq.setRequestHeader(\"Accept-Charset\", \"x-user-defined\");\r\n\t\treq.send(null);\r\n\t\treturn req;\r\n\t}\r\n} else {\r\n\tDOMLoader.sendRequest = function(conf) {\r\n\t\tvar req = new window.XMLHttpRequest();\r\n\t\treq.open(conf.data ? \"POST\" : \"GET\", conf.url, true);\r\n\t\tif (req.overrideMimeType) req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n\t\tif (conf.data) req.setRequestHeader('Content-type','application/x-www-form-urlencoded');\r\n\t\tif (conf.responseType) req.responseType = conf.responseType;\r\n\t\tif (conf.onerror) req.onerror = conf.onerror;\r\n\t\tif (conf.onprogress) req.onprogress = conf.onprogress;\r\n\t\treq.onreadystatechange = function (event) {\r\n\t\t\tif (req.readyState === 4) {\r\n\t\t\t\tif (req.status !== 200 && req.status != 304) {\r\n\t\t\t\t\tif (conf.onerror) conf.onerror(event, false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (conf.onload) {\r\n\t\t\t\t\tconf.onload(req);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treq.send(conf.data);\r\n\t\treturn req;\r\n\t};\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/build/MIDI.js\n ** module id = 391\n ** module chunks = 1\n **/","// http://ntt.cc/2008/01/19/base64-encoder-decoder-with-javascript.html\r\n\r\n// window.atob and window.btoa\r\n\r\n(function (window) {\r\n\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\t\r\n\twindow.btoa || (window.btoa = function encode64(input) {\r\n\t\tinput = escape(input);\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3 = \"\";\r\n\t\tvar enc1, enc2, enc3, enc4 = \"\";\r\n\t\tvar i = 0;\r\n\t\tdo {\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t\t\tchr1 = chr2 = chr3 = \"\";\r\n\t\t\tenc1 = enc2 = enc3 = enc4 = \"\";\r\n\t\t} while (i < input.length);\r\n\t\treturn output;\r\n\t});\r\n\t\r\n\twindow.atob || (window.atob = function(input) {\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3 = \"\";\r\n\t\tvar enc1, enc2, enc3, enc4 = \"\";\r\n\t\tvar i = 0;\r\n\t\t// remove all characters that are not A-Z, a-z, 0-9, +, /, or =\r\n\t\tvar base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\r\n\t\tif (base64test.exec(input)) {\r\n\t\t\talert(\"There were invalid base64 characters in the input text.\\n\" + \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" + \"Expect errors in decoding.\");\r\n\t\t}\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\t\tdo {\r\n\t\t\tenc1 = keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = keyStr.indexOf(input.charAt(i++));\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\t\t\tchr1 = chr2 = chr3 = \"\";\r\n\t\t\tenc1 = enc2 = enc3 = enc4 = \"\";\r\n\t\t} while (i < input.length);\r\n\t\treturn unescape(output);\r\n\t});\r\n\r\n}(this));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/inc/Base64.js\n ** module id = 392\n ** module chunks = 1\n **/","/*\r\nCopyright (c) 2011, Daniel Guerrero\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright\r\n      notice, this list of conditions and the following disclaimer in the\r\n      documentation and/or other materials provided with the distribution.\r\n    * Neither the name of the Daniel Guerrero nor the\r\n      names of its contributors may be used to endorse or promote products\r\n      derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\r\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n \r\nvar Base64Binary = {\r\n\t_keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\r\n\r\n\t/* will return a  Uint8Array type */\r\n\tdecodeArrayBuffer: function(input) {\r\n\t\tvar bytes = Math.ceil( (3*input.length) / 4.0);\r\n\t\tvar ab = new ArrayBuffer(bytes);\r\n\t\tthis.decode(input, ab);\r\n\r\n\t\treturn ab;\r\n\t},\r\n\r\n\tdecode: function(input, arrayBuffer) {\r\n\t\t//get last chars to see if are valid\r\n\t\tvar lkey1 = this._keyStr.indexOf(input.charAt(input.length-1));\t\t \r\n\t\tvar lkey2 = this._keyStr.indexOf(input.charAt(input.length-1));\t\t \r\n\r\n\t\tvar bytes = Math.ceil( (3*input.length) / 4.0);\r\n\t\tif (lkey1 == 64) bytes--; //padding chars, so skip\r\n\t\tif (lkey2 == 64) bytes--; //padding chars, so skip\r\n\r\n\t\tvar uarray;\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\t\tvar j = 0;\r\n\r\n\t\tif (arrayBuffer)\r\n\t\t\tuarray = new Uint8Array(arrayBuffer);\r\n\t\telse\r\n\t\t\tuarray = new Uint8Array(bytes);\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\tfor (i=0; i<bytes; i+=3) {\t\r\n\t\t\t//get the 3 octects in 4 ascii chars\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(j++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(j++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(j++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(j++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\tuarray[i] = chr1;\t\t\t\r\n\t\t\tif (enc3 != 64) uarray[i+1] = chr2;\r\n\t\t\tif (enc4 != 64) uarray[i+2] = chr3;\r\n\t\t}\r\n\r\n\t\treturn uarray;\t\r\n\t}\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/inc/base64binary.js\n ** module id = 393\n ** module chunks = 1\n **/","/*\r\nclass to parse the .mid file format\r\n(depends on stream.js)\r\n*/\r\nfunction MidiFile(data) {\r\n\tfunction readChunk(stream) {\r\n\t\tvar id = stream.read(4);\r\n\t\tvar length = stream.readInt32();\r\n\t\treturn {\r\n\t\t\t'id': id,\r\n\t\t\t'length': length,\r\n\t\t\t'data': stream.read(length)\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar lastEventTypeByte;\r\n\t\r\n\tfunction readEvent(stream) {\r\n\t\tvar event = {};\r\n\t\tevent.deltaTime = stream.readVarInt();\r\n\t\tvar eventTypeByte = stream.readInt8();\r\n\t\tif ((eventTypeByte & 0xf0) == 0xf0) {\r\n\t\t\t/* system / meta event */\r\n\t\t\tif (eventTypeByte == 0xff) {\r\n\t\t\t\t/* meta event */\r\n\t\t\t\tevent.type = 'meta';\r\n\t\t\t\tvar subtypeByte = stream.readInt8();\r\n\t\t\t\tvar length = stream.readVarInt();\r\n\t\t\t\tswitch(subtypeByte) {\r\n\t\t\t\t\tcase 0x00:\r\n\t\t\t\t\t\tevent.subtype = 'sequenceNumber';\r\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for sequenceNumber event is 2, got \" + length;\r\n\t\t\t\t\t\tevent.number = stream.readInt16();\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x01:\r\n\t\t\t\t\t\tevent.subtype = 'text';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x02:\r\n\t\t\t\t\t\tevent.subtype = 'copyrightNotice';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x03:\r\n\t\t\t\t\t\tevent.subtype = 'trackName';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x04:\r\n\t\t\t\t\t\tevent.subtype = 'instrumentName';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x05:\r\n\t\t\t\t\t\tevent.subtype = 'lyrics';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x06:\r\n\t\t\t\t\t\tevent.subtype = 'marker';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x07:\r\n\t\t\t\t\t\tevent.subtype = 'cuePoint';\r\n\t\t\t\t\t\tevent.text = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x20:\r\n\t\t\t\t\t\tevent.subtype = 'midiChannelPrefix';\r\n\t\t\t\t\t\tif (length != 1) throw \"Expected length for midiChannelPrefix event is 1, got \" + length;\r\n\t\t\t\t\t\tevent.channel = stream.readInt8();\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x2f:\r\n\t\t\t\t\t\tevent.subtype = 'endOfTrack';\r\n\t\t\t\t\t\tif (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length;\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x51:\r\n\t\t\t\t\t\tevent.subtype = 'setTempo';\r\n\t\t\t\t\t\tif (length != 3) throw \"Expected length for setTempo event is 3, got \" + length;\r\n\t\t\t\t\t\tevent.microsecondsPerBeat = (\r\n\t\t\t\t\t\t\t(stream.readInt8() << 16)\r\n\t\t\t\t\t\t\t+ (stream.readInt8() << 8)\r\n\t\t\t\t\t\t\t+ stream.readInt8()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x54:\r\n\t\t\t\t\t\tevent.subtype = 'smpteOffset';\r\n\t\t\t\t\t\tif (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length;\r\n\t\t\t\t\t\tvar hourByte = stream.readInt8();\r\n\t\t\t\t\t\tevent.frameRate = {\r\n\t\t\t\t\t\t\t0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\r\n\t\t\t\t\t\t}[hourByte & 0x60];\r\n\t\t\t\t\t\tevent.hour = hourByte & 0x1f;\r\n\t\t\t\t\t\tevent.min = stream.readInt8();\r\n\t\t\t\t\t\tevent.sec = stream.readInt8();\r\n\t\t\t\t\t\tevent.frame = stream.readInt8();\r\n\t\t\t\t\t\tevent.subframe = stream.readInt8();\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x58:\r\n\t\t\t\t\t\tevent.subtype = 'timeSignature';\r\n\t\t\t\t\t\tif (length != 4) throw \"Expected length for timeSignature event is 4, got \" + length;\r\n\t\t\t\t\t\tevent.numerator = stream.readInt8();\r\n\t\t\t\t\t\tevent.denominator = Math.pow(2, stream.readInt8());\r\n\t\t\t\t\t\tevent.metronome = stream.readInt8();\r\n\t\t\t\t\t\tevent.thirtyseconds = stream.readInt8();\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x59:\r\n\t\t\t\t\t\tevent.subtype = 'keySignature';\r\n\t\t\t\t\t\tif (length != 2) throw \"Expected length for keySignature event is 2, got \" + length;\r\n\t\t\t\t\t\tevent.key = stream.readInt8(true);\r\n\t\t\t\t\t\tevent.scale = stream.readInt8();\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tcase 0x7f:\r\n\t\t\t\t\t\tevent.subtype = 'sequencerSpecific';\r\n\t\t\t\t\t\tevent.data = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// console.log(\"Unrecognised meta event subtype: \" + subtypeByte);\r\n\t\t\t\t\t\tevent.subtype = 'unknown'\r\n\t\t\t\t\t\tevent.data = stream.read(length);\r\n\t\t\t\t\t\treturn event;\r\n\t\t\t\t}\r\n\t\t\t\tevent.data = stream.read(length);\r\n\t\t\t\treturn event;\r\n\t\t\t} else if (eventTypeByte == 0xf0) {\r\n\t\t\t\tevent.type = 'sysEx';\r\n\t\t\t\tvar length = stream.readVarInt();\r\n\t\t\t\tevent.data = stream.read(length);\r\n\t\t\t\treturn event;\r\n\t\t\t} else if (eventTypeByte == 0xf7) {\r\n\t\t\t\tevent.type = 'dividedSysEx';\r\n\t\t\t\tvar length = stream.readVarInt();\r\n\t\t\t\tevent.data = stream.read(length);\r\n\t\t\t\treturn event;\r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Unrecognised MIDI event type byte: \" + eventTypeByte;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t/* channel event */\r\n\t\t\tvar param1;\r\n\t\t\tif ((eventTypeByte & 0x80) == 0) {\r\n\t\t\t\t/* running status - reuse lastEventTypeByte as the event type.\r\n\t\t\t\t\teventTypeByte is actually the first parameter\r\n\t\t\t\t*/\r\n\t\t\t\tparam1 = eventTypeByte;\r\n\t\t\t\teventTypeByte = lastEventTypeByte;\r\n\t\t\t} else {\r\n\t\t\t\tparam1 = stream.readInt8();\r\n\t\t\t\tlastEventTypeByte = eventTypeByte;\r\n\t\t\t}\r\n\t\t\tvar eventType = eventTypeByte >> 4;\r\n\t\t\tevent.channel = eventTypeByte & 0x0f;\r\n\t\t\tevent.type = 'channel';\r\n\t\t\tswitch (eventType) {\r\n\t\t\t\tcase 0x08:\r\n\t\t\t\t\tevent.subtype = 'noteOff';\r\n\t\t\t\t\tevent.noteNumber = param1;\r\n\t\t\t\t\tevent.velocity = stream.readInt8();\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x09:\r\n\t\t\t\t\tevent.noteNumber = param1;\r\n\t\t\t\t\tevent.velocity = stream.readInt8();\r\n\t\t\t\t\tif (event.velocity == 0) {\r\n\t\t\t\t\t\tevent.subtype = 'noteOff';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tevent.subtype = 'noteOn';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x0a:\r\n\t\t\t\t\tevent.subtype = 'noteAftertouch';\r\n\t\t\t\t\tevent.noteNumber = param1;\r\n\t\t\t\t\tevent.amount = stream.readInt8();\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x0b:\r\n\t\t\t\t\tevent.subtype = 'controller';\r\n\t\t\t\t\tevent.controllerType = param1;\r\n\t\t\t\t\tevent.value = stream.readInt8();\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x0c:\r\n\t\t\t\t\tevent.subtype = 'programChange';\r\n\t\t\t\t\tevent.programNumber = param1;\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x0d:\r\n\t\t\t\t\tevent.subtype = 'channelAftertouch';\r\n\t\t\t\t\tevent.amount = param1;\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tcase 0x0e:\r\n\t\t\t\t\tevent.subtype = 'pitchBend';\r\n\t\t\t\t\tevent.value = param1 + (stream.readInt8() << 7);\r\n\t\t\t\t\treturn event;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow \"Unrecognised MIDI event type: \" + eventType\r\n\t\t\t\t\t/* \r\n\t\t\t\t\tconsole.log(\"Unrecognised MIDI event type: \" + eventType);\r\n\t\t\t\t\tstream.readInt8();\r\n\t\t\t\t\tevent.subtype = 'unknown';\r\n\t\t\t\t\treturn event;\r\n\t\t\t\t\t*/\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstream = Stream(data);\r\n\tvar headerChunk = readChunk(stream);\r\n\tif (headerChunk.id != 'MThd' || headerChunk.length != 6) {\r\n\t\tthrow \"Bad .mid file - header not found\";\r\n\t}\r\n\tvar headerStream = Stream(headerChunk.data);\r\n\tvar formatType = headerStream.readInt16();\r\n\tvar trackCount = headerStream.readInt16();\r\n\tvar timeDivision = headerStream.readInt16();\r\n\t\r\n\tif (timeDivision & 0x8000) {\r\n\t\tthrow \"Expressing time division in SMTPE frames is not supported yet\"\r\n\t} else {\r\n\t\tticksPerBeat = timeDivision;\r\n\t}\r\n\t\r\n\tvar header = {\r\n\t\t'formatType': formatType,\r\n\t\t'trackCount': trackCount,\r\n\t\t'ticksPerBeat': ticksPerBeat\r\n\t}\r\n\tvar tracks = [];\r\n\tfor (var i = 0; i < header.trackCount; i++) {\r\n\t\ttracks[i] = [];\r\n\t\tvar trackChunk = readChunk(stream);\r\n\t\tif (trackChunk.id != 'MTrk') {\r\n\t\t\tthrow \"Unexpected chunk - expected MTrk, got \"+ trackChunk.id;\r\n\t\t}\r\n\t\tvar trackStream = Stream(trackChunk.data);\r\n\t\twhile (!trackStream.eof()) {\r\n\t\t\tvar event = readEvent(trackStream);\r\n\t\t\ttracks[i].push(event);\r\n\t\t\t//console.log(event);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn {\r\n\t\t'header': header,\r\n\t\t'tracks': tracks\r\n\t}\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/inc/jasmid/midifile.js\n ** module id = 394\n ** module chunks = 1\n **/","var clone = function (o) {\r\n\tif (typeof o != 'object') return (o);\r\n\tif (o == null) return (o);\r\n\tvar ret = (typeof o.length == 'number') ? [] : {};\r\n\tfor (var key in o) ret[key] = clone(o[key]);\r\n\treturn ret;\r\n};\r\n\r\nfunction Replayer(midiFile, timeWarp, eventProcessor) {\r\n\tvar trackStates = [];\r\n\tvar beatsPerMinute = 120;\r\n\tvar ticksPerBeat = midiFile.header.ticksPerBeat;\r\n\t\r\n\tfor (var i = 0; i < midiFile.tracks.length; i++) {\r\n\t\ttrackStates[i] = {\r\n\t\t\t'nextEventIndex': 0,\r\n\t\t\t'ticksToNextEvent': (\r\n\t\t\t\tmidiFile.tracks[i].length ?\r\n\t\t\t\t\tmidiFile.tracks[i][0].deltaTime :\r\n\t\t\t\t\tnull\r\n\t\t\t)\r\n\t\t};\r\n\t}\r\n\r\n\tvar nextEventInfo;\r\n\tvar samplesToNextEvent = 0;\r\n\t\r\n\tfunction getNextEvent() {\r\n\t\tvar ticksToNextEvent = null;\r\n\t\tvar nextEventTrack = null;\r\n\t\tvar nextEventIndex = null;\r\n\t\t\r\n\t\tfor (var i = 0; i < trackStates.length; i++) {\r\n\t\t\tif (\r\n\t\t\t\ttrackStates[i].ticksToNextEvent != null\r\n\t\t\t\t&& (ticksToNextEvent == null || trackStates[i].ticksToNextEvent < ticksToNextEvent)\r\n\t\t\t) {\r\n\t\t\t\tticksToNextEvent = trackStates[i].ticksToNextEvent;\r\n\t\t\t\tnextEventTrack = i;\r\n\t\t\t\tnextEventIndex = trackStates[i].nextEventIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (nextEventTrack != null) {\r\n\t\t\t/* consume event from that track */\r\n\t\t\tvar nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex];\r\n\t\t\tif (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\r\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime;\r\n\t\t\t} else {\r\n\t\t\t\ttrackStates[nextEventTrack].ticksToNextEvent = null;\r\n\t\t\t}\r\n\t\t\ttrackStates[nextEventTrack].nextEventIndex += 1;\r\n\t\t\t/* advance timings on all tracks by ticksToNextEvent */\r\n\t\t\tfor (var i = 0; i < trackStates.length; i++) {\r\n\t\t\t\tif (trackStates[i].ticksToNextEvent != null) {\r\n\t\t\t\t\ttrackStates[i].ticksToNextEvent -= ticksToNextEvent\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t\"ticksToEvent\": ticksToNextEvent,\r\n\t\t\t\t\"event\": nextEvent,\r\n\t\t\t\t\"track\": nextEventTrack\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\t//\r\n\tvar midiEvent;\r\n\tvar temporal = [];\r\n\t//\r\n\tfunction processEvents() {\r\n\t\tfunction processNext() {\r\n\t\t\tif ( midiEvent.event.type == \"meta\" && midiEvent.event.subtype == \"setTempo\" ) {\r\n\t\t\t\t// tempo change events can occur anywhere in the middle and affect events that follow\r\n\t\t\t\tbeatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;\r\n\t\t\t} \r\n\t\t\tif (midiEvent.ticksToEvent > 0) {\r\n\t\t\t\tvar beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;\r\n\t\t\t\tvar secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);\r\n\t\t\t}\r\n\t\t\tvar time = (secondsToGenerate * 1000 * timeWarp) || 0;\r\n\t\t\ttemporal.push([ midiEvent, time]);\r\n\t\t\tmidiEvent = getNextEvent();\r\n\t\t};\r\n\t\t//\r\n\t\tif (midiEvent = getNextEvent()) {\r\n\t\t\twhile(midiEvent) processNext(true);\r\n\t\t}\r\n\t};\r\n\tprocessEvents();\r\n\treturn {\r\n\t\t\"getData\": function() {\r\n\t\t\treturn clone(temporal);\r\n\t\t}\r\n\t};\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/inc/jasmid/replayer.js\n ** module id = 395\n ** module chunks = 1\n **/","/* Wrapper for accessing strings through sequential reads */\r\nfunction Stream(str) {\r\n\tvar position = 0;\r\n\t\r\n\tfunction read(length) {\r\n\t\tvar result = str.substr(position, length);\r\n\t\tposition += length;\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/* read a big-endian 32-bit integer */\r\n\tfunction readInt32() {\r\n\t\tvar result = (\r\n\t\t\t(str.charCodeAt(position) << 24)\r\n\t\t\t+ (str.charCodeAt(position + 1) << 16)\r\n\t\t\t+ (str.charCodeAt(position + 2) << 8)\r\n\t\t\t+ str.charCodeAt(position + 3));\r\n\t\tposition += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/* read a big-endian 16-bit integer */\r\n\tfunction readInt16() {\r\n\t\tvar result = (\r\n\t\t\t(str.charCodeAt(position) << 8)\r\n\t\t\t+ str.charCodeAt(position + 1));\r\n\t\tposition += 2;\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/* read an 8-bit integer */\r\n\tfunction readInt8(signed) {\r\n\t\tvar result = str.charCodeAt(position);\r\n\t\tif (signed && result > 127) result -= 256;\r\n\t\tposition += 1;\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction eof() {\r\n\t\treturn position >= str.length;\r\n\t}\r\n\t\r\n\t/* read a MIDI-style variable-length integer\r\n\t\t(big-endian value in groups of 7 bits,\r\n\t\twith top bit set to signify that another byte follows)\r\n\t*/\r\n\tfunction readVarInt() {\r\n\t\tvar result = 0;\r\n\t\twhile (true) {\r\n\t\t\tvar b = readInt8();\r\n\t\t\tif (b & 0x80) {\r\n\t\t\t\tresult += (b & 0x7f);\r\n\t\t\t\tresult <<= 7;\r\n\t\t\t} else {\r\n\t\t\t\t/* b is the last byte */\r\n\t\t\t\treturn result + b;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn {\r\n\t\t'eof': eof,\r\n\t\t'read': read,\r\n\t\t'readInt32': readInt32,\r\n\t\t'readInt16': readInt16,\r\n\t\t'readInt8': readInt8,\r\n\t\t'readVarInt': readVarInt\r\n\t}\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/midi/inc/jasmid/stream.js\n ** module id = 396\n ** module chunks = 1\n **/"],"sourceRoot":""}